---
import Container from "./Container.astro"
---

<Container> 
    <div class="pt-40 m-4">
        <div class="max-w-3xl mx-auto p-6 bg-gray-900 rounded-lg shadow-lg text-white">
            <h1 class="text-center text-3xl font-bold"> Montando un nodo de Nym </h1>
<h2 class="text-2xl font-semibold mt-4">Requerimientos </h2>


<li class="mt-4"> Vps con <code class="ml-4"> 4 Cores | 4gb Ram | ipv4 | ipv6 | 1GBS de tranferencia | Ubuntu 20.04 o superior</code></li></ul>
<li class="mt-4">Wallet con 101 Tokens</li></ul>
<li class="mt-4">Terminal bash  </li></ul>
<li class="mt-4">Internet  </li></ul>


<h2 class="text-2xl font-semibold mt-4">Paso 1 </h2>
            <p class="text-withe mt-4" >Abrir la wallet </p>

            <h2 class="text-2xl font-semibold mt-4">Paso 2 </h2>
            <p class="text-withe mt-4" > Entrar al root del vps vÃ­a ssh
<br>
<br> 
<i>Para usuarios de windows recmendamos usar wsl, terminal de unix en windows </i> </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> ssh root@192.168.0.x</code>
 
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 3 </h2>
<p class="text-withe mt-4" >Descargar el binario en el vps del sitio de releases del <a href="https://github.com/nymtech/nym/releases" target="_blank" class="hover:text-orange-400">github de nym</a> </p>

<div class="relative">
    <pre class="hover:text-orange-400 overflow-x-auto"> 
        <code>wget -c https://github.com/nymtech/nym/releases/download/nym-binaries-v2024.5-ragusa/nym-node </code>
      
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 4 </h2>
<p class="text-withe mt-4" >Darmos permisos de ejecucuÃ³n al binario </p>

<div class="relative">
    <pre class="hover:text-orange-400 overflow-x-auto">
        <code>chmod u+x nym-node </code>
      
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 5 </h2>
<p class="text-withe mt-4" >Verificar la versiÃ³n del nym-node </p>

<div class="relative">
    <pre class="hover:text-orange-400 overflow-x-auto">
        <code>./nym-node --version </code>
      
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 6 </h2>
<p class="text-withe mt-4" >Iniciamos el nodo </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> ./nym-node run --id testnode --init-only --mode mixnode --verloc-bind-address 0.0.0.0:1790 --public-ips "$(curl -4 https://ifconfig.me)"</code>
    
    </pre>
</div>

<p class="text-withe mt-4" >Debes de obteneter el Ident Key y el Sphinx Key para ponerlos en la wallet y hacer el bonding</p>

<div class="relative">
    <pre class="text-gray-600 pr-20 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>
Identity Key: DMkSeKp3Zq5....
Sphinx Key: A6BFTQsuTWFuQ....
Host: 65.108.110.214 (bind address: 65.108.110.214)
Version: 1.1.17
Mix Port: 1789, Verloc port: 1790, Http Port: 8000
        </code>
       
    </pre>
</div>

<div>
    <h2 class="text-2xl font-semibold mt-4">Paso 7 </h2>
    <p class="text-withe mt-4" >Creamos el archivo de informacion del servicio</p>

    <div class="relative">
        <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
            <code>nano /etc/systemd/system/nym-node.service</code>
      
        </pre>
    </div>

    <p class="mt-4">Ingresamos Esta iinformaciÃ³n</p>
    <div class="relative">
        <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto">
            <code>
[Unit]
Description=Nym Node
StartLimitInterval=350
StartLimitBurst=10
                      
[Service]
User=root
LimitNOFILE=65536
ExecStart=/root/nym-node run --mode mixnode --id testnode --deny-init
KillSignal=SIGINT
Restart=on-failure
RestartSec=30
                      
[Install]
WantedBy=multi-user.target
            </code>
            
        </pre>
    </div>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 8 </h2>
<p class="text-withe mt-4" >Habilitar el servicio y lo iniciamos </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>systemctl enable nym-node.service</code>
      
    </pre>
</div>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>systemctl daemon-reload</code>
       
    </pre>
</div>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>service nym-node start</code>
       
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 9 </h2>
<p class="text-withe mt-4" >Revisamos la informacion para el bonding </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>./nym-node bonding-information --id testnode</code>
        
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 10</h2>
<p class="text-withe mt-4" >Hacer el bonding desde la wallet</p>
<p class="text-withe mt-4" >Depositamos los datos que nos dio en la terminal</p>
<img class="mt-4 justify-center" src="https://user-images.githubusercontent.com/17709296/235567658-975dacd4-738b-42fe-9f5d-d238985e72c4.png"  width="400">

<h2 class="text-2xl font-semibold mt-4">Paso 10 </h2>
<p class="text-withe mt-4" >Obtenemos la firma </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> ./nym-node sign --id testnode --contract-msg.............</code>
      
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 11 </h2>
<p class="text-withe mt-4" >Agregamos la otra firma en la wallet </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code>  >>> The base58-encoded signature is:
2GbKcZVKFdpi3sR9xoJWzw.......</code>
        
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 13 </h2>
<p class="text-withe mt-4" >Configura tu firewall </p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> 
# revisa si tienes instalado  ufw 
ufw version
        </code>
        
    </pre>
</div>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> 
# si no estÃ¡ instalado, instalalo con
sudo apt install ufw -y
        </code>
        
    </pre>
</div>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> 
# habilita ufw
sudo ufw enable
        </code>
     
    </pre>
</div>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> 
# revisa el status del firewall
sudo ufw status
        </code>
        
    </pre>
</div>

<h2 class="text-2xl font-semibold mt-4">Paso 14 </h2>
<p class="text-withe mt-4" >Habilitar los puertos 1789, 1790 8000, 22, 80, 443</p>

<div class="relative">
    <pre class="text-gray-600 dark:text-gray-300 text-1xl rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400 overflow-x-auto"> 
        <code> 
ufw allow 1789
ufw allow 1790
ufw allow 22,443,1789,1790,8080/tcp
ufw allow 8080
#Revisa tu Firewal
ufw status    
        </code>
       
    </pre>
</div>

<p class="text-withe mt-4" >Busca tu nodo en el  <span><a class=" hover:bg-primary " href="https://nym.explorers.guru/" target="_blank">Explorer</a></span> usando tu Identy Key </p>

<h1 class="text-3xl mt-8 text-center"> Felicidades ðŸŽ‰ðŸŽ‰</h1>
<div class=""> 
  <h1 class="text-white text-2xl font-semibold mb-10 mt-8">VÃ­deo</h1>
  <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/AUCEetZ-qdY?si=R4u6horAPIdOvabV" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
</div>
</div>

</div>
</Container>

<script>
  let copyButtonLabel = "Copiar Codigo";
  let codeBlocks = Array.from(document.querySelectorAll("pre"));

  for (let codeBlock of codeBlocks) {
    let wrapper = document.createElement("div");
    wrapper.style.position = "relative";
  
    let copyButton = document.createElement("button");
    copyButton.className = "copy-code";
    copyButton.innerHTML = copyButtonLabel;
    copyButton.style.position = "absolute";
    copyButton.style.top = "1";
    copyButton.style.right = "1";

    codeBlock.setAttribute("tabindex", "0");
    codeBlock.appendChild(copyButton);
    // wrap codebock with relative parent element
    codeBlock.parentNode.insertBefore(wrapper, codeBlock);
    wrapper.appendChild(codeBlock);

    copyButton.addEventListener("click", async () => {
      await copyCode(codeBlock, copyButton);
    });
  }

  async function copyCode(block, button) {
    let code = block.querySelector("code");
    let text = code.innerText;

    await navigator.clipboard.writeText(text);

    // visual feedback that task is completed
    button.innerText = "Codigo copiado";

    setTimeout(() => {
      button.innerText = copyButtonLabel;
    }, 700);
  }
</script>