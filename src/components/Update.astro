---
import Container from "./Container.astro"
---

<Container>

    <div class="pt-40 m-4">
        <div class="max-w-3xl mx-auto p-6 bg-gray-900 rounded-lg shadow-lg text-white">   <h1 class="text-center text-3xl font-bold"> Montando un nodo de Nym </h1>
            <h2 class="text-2xl font-semibold mt-4">Requerimientos </h2> 
     
<li class="mt-4"> Vps con <code class="ml-4"> 4 Cores | 4gb Ram | ipv4 | ipv6 | 1GBS de tranferencia | Ubuntu 20.04 o superior</code></li></ul>
<li class="mt-4">Wallet con 101 Tokens</li></ul>
<li class="mt-4">Terminal bash  </li></ul>
<li class="mt-4">Internet  </li></ul>
        

<h2 class="text-2xl font-semibold mt-4">Paso 5 </h2>
<p class="text-withe mt-4" >Verificar la versión del nym-node </p>
<pre>

 <code class="text-gray-600 dark:text-gray-300 text-1xl  rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400">rm -rf nym-node && wget https://github.com/nymtech/nym/releases/download/nym-binaries-v2024.8-wispa/nym-node && 
    chmod +x nym-node && 
    service nym-node restart && 
    journalctl -f -u nym-node.service

 </code>
</pre>

<br>

<h2 class="text-2xl font-semibold mt-4">Firmar Terminos y condiciones </h2>
<p class="text-withe mt-4" >Verificar la versión del nym-node </p>
<pre>

 <code class="text-gray-600 dark:text-gray-300 text-1xl  rounded-lg shadow-lg bg-gray-900 p-4 hover:text-orange-400">sed -i 's/--deny-init/--deny-init --accept-operator-terms-and-conditions/' /etc/systemd/system/nym-node.service && \
    systemctl daemon-reload && \
    systemctl restart nym-node && \
    journalctl -f -u nym-node.service</code>
</pre>


        </div>
    </div>

</Container>

<script>
    let copyButtonLabel = "Copiar Codigo ";
    let codeBlocks = Array.from(document.querySelectorAll("pre"));
  
    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement("div");
      wrapper.style.position = "relative";
      wrapper.style.width = "100%";
  
      let copyButton = document.createElement("button");
      copyButton.className = "copy-code";
      copyButton.innerHTML = copyButtonLabel;
      copyButton.style.backgroundColor = "orange";
      copyButton.style.position = "absolute";
      copyButton.style.top = "1";
      copyButton.style.right = "0";
  
      codeBlock.setAttribute("tabindex", "0");
      codeBlock.appendChild(copyButton);
      // wrap codebock with relative parent element
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);
  
      copyButton.addEventListener("click", async () => {
        await copyCode(codeBlock, copyButton);
      });
    }
  
    async function copyCode(block, button) {
      let code = block.querySelector("code");
      let text = code.innerText;
  
      await navigator.clipboard.writeText(text);
  
      // visual feedback that task is completed
      button.innerText = "Code Copied ✅";
  
      setTimeout(() => {
        button.innerText = copyButtonLabel;
      }, 700);
    }
  </script>